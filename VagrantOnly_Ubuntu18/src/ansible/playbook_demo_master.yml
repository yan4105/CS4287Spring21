---


#####################################################
### Play 1: Create cloud VMs
#####################################################

# - name: Play 1 Create cloud VMs
#  hosts: MyLocalVMs
#  remote_user: parallels

#  tasks:
#  - include_tasks: playbook_create_cloud_vms.yml



#####################################################
### Play 2: Setup kafka
#####################################################

- name: "Play 2: Setup kafka"

  hosts: MyChameleonVMs       # my list of VMs on chosen cloud
  remote_user:  cc        # remote user is cc but change as appropriate
  become: yes               # run as sudo



  tasks:    # the task to be performed (here I am showing the effect of include_)

  - include_tasks: playbook_kafka_setup.yml



#####################################################
### Play 3: Copy consumer.py to VM2
#####################################################

- name: "Play 3: Copy consumer code to VM2"

  hosts: MyLocalVMs          # specified in the MyInventory file

                             # vagrant-created VM else use the

                             # appropriate user name

  become_user: no            # No need for sudo as we are not installing anything



  tasks:    # the task to be performed (here I am showing the effect of include_)

  - include_tasks: playbook_copy_consumer_to_cloud_vm.yml



###########################################
# Play 3: Now perform some activities on our cloud VMs time while include_ will give error
# only while running the play
###########################################

- name: "Play 4: Start Zookeeper, Kafka, and consumer"
  hosts: MyChameleonVMs

  strategy: debug        # start a debugger on error

  become: yes               # run as sudo

  collections:               # import the plugin

  - openstack.cloud



  ### All the tasks related to the cloud VMs ###

  # note that since we already defined the hosts and remote_user parameters

  # above, we simply import the tasks (could have included) and these

  # tasks are in the playbooks defined in my tasks/ directory

  tasks:

  - include_tasks: playbook_start_server.yml

...
